A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:

.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written

.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.

.TP
.B S
Prints a string. Non printable characters are printed as "\x" followed by their ASCII values in two digit hexadecimal

.TP
.B d, i
The int argument is converted to signed decimal notation.

.TP
.B x, X
The unsigned int argument is converted to unsigned lowercase hexadecimal notation(x), or unsigned uppercase hexadecimal notation(X).

.TP
.B u
The unsigned int argument is converted to unsigned decimal notation

.TP
.B o, b
The unsigned int argument is converted to unsigned octal notation(o) or binary notation(b).

.TP
.B p
Address is printed in hexadecimal.

.TP
.B r
Prints a string in reverse.

.TP
.B R
Prints a string converted to rot13

.TP
.B %
A '%' is written but no argument is converted. The complete version specification is '%%'

.SH EXAMPLE
To print the day of the year, where weekday and month are pointers to strings and day and year are integers:

#include "main.h"

_printf("%s, %s %d, %d\\n", weekday, month, day, year);

.SH SEE ALSO
.I printf(3)

.SH BUGS
No known bugs.

.SH AUTHOR
Al-amin Ahmed, Marvellous Okechukwu